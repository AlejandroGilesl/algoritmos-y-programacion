#include <iostream>
#include <conio.h>
using namespace std;
void cargar (int vec [], int n)
{
	cout<<"ingrese los elementos del vector: "<<endl;
	for (int i=0;i<n;i++)
	{
		cout<<"vec["<<i<<"]= ";
		cin>>vec[i];
	}

}
void mostrar (int vec[], int n)
{
	cout<<"el contenido del vector es: "<<endl;
	for (int i=0;i<n;i++)
	{
		cout<<"vec["<<i<<"]= "<<vec[i]<<endl;
	}

}
bool verifPrimo (int n)
{
	int i;
	bool k=true;
	for (i=2;i<=n-1;i++)
	{
		if (n % i==0)
		{
			k=false;
		}
	}
	return (k);
}
int nsimoPrimo (int n)
{
	int c=0, cp= 0;
	while (cp < n)
	{
		c++;
		if (verifPrimo(c)==true)
		{
			cp++;

		}

	}
	return(c);
	
}
void concatenarPares (int vec[], int &n)
{
	bool k;
	int dig;
	for (int i=0;i<n;i++)
	{
		k=verifPrimo(vec[i]);
		if (k==true)
		{
			for (int j=i;j<n-1;j++)
			{
				vec[j]=vec[j+1];
			}
			n--;
			i--;
		}
	}
}
void concatenadoPrimo (int vec[],int n)
{
	int j=n-1,l=0,band=0;
	for (int i=0;i<n;i++)
	{
		if (band=0)
		{
			vec[l++]=nsimoPrimo(i+1);
			band=1;
		}
		else
		{
			if (band=1)
			{
				vec[j--]=nsimoPrimo(i+1);
				band=0;
			}

		}

	}

}
void ordenadoAsc(int vec[], int n)
{
	int aux;
	for (int i=0;i<n;i++)
	{
		for (int j=i+1;j<n;j++)
		{
			if (vec[i]>vec[j])
			{
				aux=vec[i];
				vec[i]=vec[j];
				vec[j]=aux;
			}
		}

	}
}
void main ()
{
	int vec [50], n;
	cout<<"Ingrese la cantidad de elementos del vector: ";
	cin>>n;
	cargar(vec,n);
	ordenadoAsc(vec,n);
	mostrar (vec,n);
	getch();
}
